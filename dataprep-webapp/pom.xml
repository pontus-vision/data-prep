<!--
  ~ ============================================================================
  ~ Copyright (C) 2006-2018 Talend Inc. - www.talend.com
  ~
  ~ This source code is available under agreement available at
  ~ https://github.com/Talend/data-prep/blob/master/LICENSE
  ~
  ~ You should have received a copy of the agreement
  ~ along with this program; if not, write to Talend SA
  ~ 9 rue Pages 92150 Suresnes, France
  ~
  ~ ============================================================================
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.talend.dataprep</groupId>
        <artifactId>dataprep-parent</artifactId>
        <version>2.5.1</version>
    </parent>
    <artifactId>dataprep-webapp</artifactId>
    <packaging>pom</packaging>

    <name>dataprep-webapp</name>

    <properties>
        <docker.image.name>kkarczmarczyk/node-yarn</docker.image.name>
        <node.version>v7.7.4</node.version>
        <yarn.version>v1.3.2</yarn.version>
        <git.branch.name></git.branch.name>
        <git.commit.id.abbrev></git.commit.id.abbrev>
    </properties>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>bin</directory>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                        <fileset>
                            <directory>build</directory>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                        <fileset>
                            <directory>coverage</directory>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                        <fileset>
                            <directory>dist</directory>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                        <fileset>
                            <directory>node</directory>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                        <fileset>
                            <directory>node_modules</directory>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>install node and yarn</id>
                        <goals>
                            <goal>install-node-and-yarn</goal>
                        </goals>
                        <configuration>
                            <nodeVersion>${node.version}</nodeVersion>
                            <yarnVersion>${yarn.version}</yarnVersion>
                        </configuration>
                    </execution>
                    <execution>
                        <id>yarn install</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <configuration>
                            <arguments>install --force</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>yarn build</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <configuration>
                            <arguments>run build:dist</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>yarn test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <configuration>
                            <skip>${skipTests}</skip>
                            <arguments>test</arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>assembly/dist.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>ci</id>
            <build>
                <plugins>
                    <plugin>
                        <!-- Override arguments of "yarn test" execution to add CI tests -->
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>yarn test</id>
                                <configuration>
                                    <arguments>run test:ci</arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <executions>
                            <!-- This is a hack to get Jenkins to publish Karma test results when running a Maven project: we run 0 surefire tests, so Jenkins publishes the report of the Karma tests. -->
                            <execution>
                                <id>dummySureFire</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker-ci</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <docker.image.name>
                    localhost:5000/talend/${project.name}:${project.version}-${git.branch.name}-${git.commit.id.abbrev}
                </docker.image.name>
                <stack.param.name>DataPrepWebappFQIN</stack.param.name>
            </properties>
        </profile>
    </profiles>
</project>
