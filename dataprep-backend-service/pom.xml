<?xml version="1.0"?>
<!--
  ~ ============================================================================
  ~ Copyright (C) 2006-2018 Talend Inc. - www.talend.com
  ~
  ~ This source code is available under agreement available at
  ~ https://github.com/Talend/data-prep/blob/master/LICENSE
  ~
  ~ You should have received a copy of the agreement
  ~ along with this program; if not, write to Talend SA
  ~ 9 rue Pages 92150 Suresnes, France
  ~
  ~ ============================================================================
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.pontusvision</groupId>
        <artifactId>dataprep-backend</artifactId>
        <version>103.0.0</version>
        <relativePath>../dataprep-backend/pom.xml</relativePath>
    </parent>

    <artifactId>dataprep-backend-service</artifactId>
    <packaging>jar</packaging>

    <properties>
        <git-commit-id-plugin.file-name>dataprep-git.properties</git-commit-id-plugin.file-name>
    </properties>

    <dependencies>
        <!-- SPRING DEPENDENCIES -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-sleuth</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency><!-- Need Spring Data common API (but not a whole Spring Data stack) -->
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-commons</artifactId>
        </dependency>
        <dependency><!-- Need Spring Security API (but not the whole Spring Security stack) -->
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
        </dependency>
        <!-- TALEND DEPENDENCIES -->
        <dependency>
            <groupId>org.talend.daikon</groupId>
            <artifactId>content-service-common</artifactId>
            <classifier>lib</classifier>
        </dependency>
        <dependency>
            <groupId>org.talend.daikon</groupId>
            <artifactId>local-content-service</artifactId>
            <classifier>lib</classifier>
        </dependency>
        <dependency>
            <groupId>org.talend.daikon</groupId>
            <artifactId>daikon-spring-tenancy</artifactId>
        </dependency>
        <dependency>
            <groupId>org.talend.dataquality</groupId>
            <artifactId>dataquality-record-linkage</artifactId>
        </dependency>
        <dependency>
            <groupId>org.talend.dataquality</groupId>
            <artifactId>dataquality-semantic</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.json</groupId>
                    <artifactId>json</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.talend.daikon</groupId>
            <artifactId>daikon</artifactId>
        </dependency>
        <dependency>
            <groupId>org.talend.dataquality</groupId>
            <artifactId>dataquality-common</artifactId>
        </dependency>
        <dependency>
            <groupId>org.talend.daikon</groupId>
            <artifactId>daikon-tql-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.talend.daikon</groupId>
            <artifactId>daikon-tql-bean</artifactId>
        </dependency>
        <dependency>
            <groupId>com.pontusvision</groupId>
            <artifactId>dataprep-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.pontusvision</groupId>
            <artifactId>dataprep-core-actions</artifactId>
        </dependency>
        <dependency>
            <groupId>com.pontusvision</groupId>
            <artifactId>dataprep-avro-message</artifactId>
        </dependency>
        <!-- OTHER DEPENDENCIES -->
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jayway.restassured</groupId>
            <artifactId>rest-assured</artifactId>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.zafarkhaja</groupId>
            <artifactId>java-semver</artifactId>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
        </dependency>
        <dependency>
            <groupId>com.netflix.hystrix</groupId>
            <artifactId>hystrix-core</artifactId>
        </dependency>
        <dependency>
            <groupId>net.sf.opencsv</groupId>
            <artifactId>opencsv</artifactId>
        </dependency>
        <dependency>
            <groupId>io.reactivex</groupId>
            <artifactId>rxjava</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
        </dependency>
        <dependency>
            <groupId>com.monitorjbl</groupId>
            <artifactId>xlsx-streamer</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-configuration2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.tika</groupId>
            <artifactId>tika-parsers</artifactId>
        </dependency>
        <dependency>
            <groupId>uk.co.datumedge</groupId>
            <artifactId>hamcrest-json</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math3</artifactId>
        </dependency>

        <!-- UNIT TEST DEPENDENCIES -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.json</groupId>
                    <artifactId>json</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.pontusvision</groupId>
            <artifactId>dataprep-core</artifactId>
            <type>test-jar</type>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <!-- This enable maven defined variables in banner.txt as ${project.version} -->
                <directory>src/main/resources</directory>
                <includes><include>banner.txt</include></includes>
                <filtering>true</filtering>
            </resource>
            <resource>
                <!-- This enable maven defined variables in banner.txt as ${project.version} -->
                <directory>src/main/resources</directory>
                <includes><include>**/*</include></includes>
                <filtering>false</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
